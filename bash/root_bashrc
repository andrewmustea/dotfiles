#
# /root/.bashrc
#


# If not running interactively, don't do anything
case $- in
    *i*) ;;
    *) return ;;
esac


# shell options
#
shopt -s checkwinsize
shopt -s histappend
shopt -s extglob
shopt -s expand_aliases
if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        source /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
        source /etc/bash_completion
    fi
fi

if [ -x /usr/lib/command-not-found ] \
    || [ -x /usr/share/command-not-found/command-not-found ]; then
    command_not_found_handle() {
        # check because c-n-f could've been removed in the meantime
        if [ -x /usr/lib/command-not-found ]; then
            /usr/lib/command-not-found -- "$1"
            return $?
        elif [ -x /usr/share/command-not-found/command-not-found ]; then
            /usr/share/command-not-found/command-not-found -- "$1"
            return $?
        else
            printf "%s: command not found\n" "$1" >&2
            return 127
        fi
    }
fi


# history
#
PROMPT_COMMAND='history -a'
HISTSIZE=10000
HISTFILESIZE=10000
export HISTCONTROL=ignoredups
export HISTIGNORE='history:pwd:ls:ll:la:l:'


# sudo
#
# refresh sudo and export environment
alias sudo='sudo -v; sudo --preserve-env '


# ls
#
alias ls='ls -hF --color=auto'
alias ll='ls -l'
alias la='ls -Al'
alias l='ls -C'


# mkdir
#
alias mkdir='mkdir --parents'


# colors
#
alias dir='dir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias dmesg='dmesg --color'

GCC_COLORS="$(printf "error=01;31:warning=01;35:note=01;%s" \
    "36:caret=01;32:locus=01:quote=01")"
export GCC_COLORS


# gpg
#
GPG_TTY=$(tty)
export GPG_TTY


# nvim
#
export EDITOR='nvim'
alias {vi,nvi}='nvim'
alias {vd,nvd,nvimdiff}='nvim -d'


# less
#
LESS_TERMCAP_mb="$(printf '\E[01;31m')"
LESS_TERMCAP_md="$(printf '\E[01;38;5;74m')"
LESS_TERMCAP_me="$(printf '\E[0m')"
LESS_TERMCAP_se="$(printf '\E[0m')"
LESS_TERMCAP_so="$(printf '\E[38;5;246m')"
LESS_TERMCAP_ue="$(printf '\E[0m')"
LESS_TERMCAP_us="$(printf '\E[04;38;5;146m')"

export LESS_TERMCAP_mb
export LESS_TERMCAP_md
export LESS_TERMCAP_me
export LESS_TERMCAP_se
export LESS_TERMCAP_so
export LESS_TERMCAP_ue
export LESS_TERMCAP_us

alias less='less -QR'
alias man='man -P "less -QR"'

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"


# python
#
which nala &>/dev/null && alias apt='nala'


# wsl settings
#
if [[ -n "$WSLENV" ]]; then
    print_path() {
        printf "%s\n" "${PATH//:/$'\n'}" | grep -v '^/mnt/c/'
    }
else
    print_path() {
        printf "%s\n" "${PATH//:/$'\n'}"
    }
fi


# ips and ssh targets
#
alias pingpath='mtr'
alias myip='curl -s checkip.amazonaws.com'


# permissions
#
alias mx='chmod a+x'


# other
#
psgrep() {
    pgrep "$@" | xargs --no-run-if-empty ps -fp
}

pskill() {
    local pid
    pid=$(pgrep "$@" | xargs -r ps --no-headers -fp | awk '{ print $2 }')
    echo "killing $1 (process $pid)..."
    kill -9 "$pid"
}

extract() {
    if [ -f "$1" ]; then
        case $1 in
            *.tar.bz2) tar xvjf "$1" ;;
            *.tar.gz) tar xvzf "$1" ;;
            *.tar.xz) tar xvf "$1" ;;
            *.bz2) bunzip2 "$1" ;;
            *.rar) unrar x "$1" ;;
            *.gz) gunzip "$1" ;;
            *.tar) tar xvf "$1" ;;
            *.tbz2) tar xvjf "$1" ;;
            *.tgz) tar xvzf "$1" ;;
            *.zip) unzip "$1" ;;
            *.Z) uncompress "$1" ;;
            *.7z) 7z x "$1" ;;
            *) echo "don't know how to extract '$1'..." ;;
        esac
    else
        echo "'$1' is not a valid file!"
    fi
}

